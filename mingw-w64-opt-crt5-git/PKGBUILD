# Maintainer:  Tim Stahlhut <stahta01@gmail.com>

_pkg_prefix=${MINGW_PREFIX}/opt

_basename=crt
_realname=${_basename}
pkgbase=mingw-w64-opt-${_basename}5-git
pkgname=(
  "${MINGW_PACKAGE_PREFIX}-opt-${_basename}-git" 
  "${MINGW_PACKAGE_PREFIX}-opt-headers-git" 
  "${MINGW_PACKAGE_PREFIX}-opt-pthread-stub-headers-git"
#  "${MINGW_PACKAGE_PREFIX}-opt-libmangle-git"
)
pkgver=5.0.0.4742.fb1deb11
pkgrel=1
_git_branch="v5.x" # 5.0.0.4742.fb1deb11
#_git_branch="v4.x" # 4.0.0.4514.ae0e22cd
#_git_branch="v3.x" # 3.4.0.3935.8c7e0088
#_git_branch="v2.x" #
#_git_tag="v2.0.1"  #
pkgdesc='MinGW-w64 CRT for Windows'
arch=('any')
url='https://mingw-w64.sourceforge.io/'
license=('custom')
groups=("${MINGW_PACKAGE_PREFIX}-opt-toolchain")
makedepends=('git' 'make'
#             "${MINGW_PACKAGE_PREFIX}-tools" # Is this really needed?
             "${MINGW_PACKAGE_PREFIX}-opt-gcc"
             "${MINGW_PACKAGE_PREFIX}-binutils")
options=('!strip' 'staticlibs' '!buildflags' '!emptydirs')
_sourcedir=mingw-w64-git
_git_repo_url=git+https://git.code.sf.net/p/mingw-w64/mingw-w64
if [ -n "$_git_branch" ]; then
  source=(${_sourcedir}::"${_git_repo_url}#branch=$_git_branch")
elif [ -n "$_git_tag" ]; then
  source=(${_sourcedir}::"${_git_repo_url}#tag=$_git_tag")
elif [ -n "$_git_commit" ]; then
  source=(${_sourcedir}::"${_git_repo_url}#commit=$_git_commit")
else
  source=(${_sourcedir}::"${_git_repo_url}")
fi
source+=(0001-Allow-to-use-bessel-and-complex-functions-without-un.patch)
sha256sums=('SKIP'
            'd641257f7e1469aff89adc33e57702b75fe9667ca035978f890eae1020b6814c')

# Declare global variables; begin with underscore to avoid name conflicts
_git_base_commit=

pkgver() {
  cd "${srcdir}/${_sourcedir}"
  local _major=$(head -n 16 mingw-w64-headers/crt/_mingw_mac.h | sed '/__MINGW64_STRINGIFY/d' | grep '__MINGW64_VERSION_MAJOR' | sed -e 's/.* //' | tr '\n' '.' | sed 's/.$/\n/')
  local _minor=$(head -n 16 mingw-w64-headers/crt/_mingw_mac.h | sed '/__MINGW64_STRINGIFY/d' | grep '__MINGW64_VERSION_MINOR' | sed -e 's/.* //' | tr '\n' '.' | sed 's/.$/\n/')
  local _rev=0
  printf "%s.%s.%s.%s.%s" ${_major} ${_minor} ${_rev} "$(git rev-list --count $_git_base_commit)" "$(git rev-parse --short $_git_base_commit)"
}

prepare() {
  cd ${srcdir}/${_sourcedir}

  _git_base_commit=$(git rev-parse HEAD)

  echo "_git_base_commit := $_git_base_commit"

  git am --committer-date-is-author-date "${srcdir}/0001-Allow-to-use-bessel-and-complex-functions-without-un.patch"

  cd "${srcdir}"/${_sourcedir}/mingw-w64-libraries/libmangle
  autoreconf -vfi
}

build() {
  local _crt_configure_args
  case "$CARCH" in
    i686)
      _crt_configure_args="--disable-lib64 --enable-lib32"
    ;;
    x86_64)
      _crt_configure_args="--disable-lib32 --enable-lib64"
    ;;
    armv7)
      _crt_configure_args="--disable-lib32 --disable-lib64 --enable-libarm32"
    ;;
    aarch64)
      _crt_configure_args="--disable-lib32 --disable-lib64 --disable-libarm32 --enable-libarm64"
    ;;
  esac

  local _local_gcc_prefix=${MINGW_PREFIX}/opt
  export PATH="${_local_gcc_prefix}/bin":$PATH
  export GNATBIND="${_local_gcc_prefix}/bin/gnatbind"
  export GNATMAKE="${_local_gcc_prefix}/bin/gnatmake"
  export CC="${_local_gcc_prefix}/bin/gcc"
  export CXX="${_local_gcc_prefix}/bin/g++"

  msg "Configuring ${MINGW_CHOST} headers"
  [[ -d ${srcdir}/headers-${MINGW_CHOST} ]] && rm -rf ${srcdir}/headers-${MINGW_CHOST}
  mkdir -p ${srcdir}/headers-${MINGW_CHOST} && cd ${srcdir}/headers-${MINGW_CHOST}
  ${srcdir}/${_sourcedir}/mingw-w64-headers/configure \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --prefix=${_pkg_prefix}/${MINGW_CHOST} \
    --enable-sdk=all \
    --enable-idl \
    --without-widl

  msg "Installing local copy of ${MINGW_CHOST} headers"
  cd ${srcdir}/headers-${MINGW_CHOST}
  rm -fr ${srcdir}/${_pkg_prefix}/${MINGW_CHOST}/include
  make DESTDIR=${srcdir} install

  msg "Building ${MINGW_CHOST} CRT"
  [[ -d ${srcdir}/crt-${MINGW_CHOST} ]] && rm -rf ${srcdir}/crt-${MINGW_CHOST}
  mkdir -p ${srcdir}/crt-${MINGW_CHOST} && cd ${srcdir}/crt-${MINGW_CHOST}
  CFLAGS+=" -I${srcdir}/${_pkg_prefix}/${MINGW_CHOST}/include" \
  ${srcdir}/${_sourcedir}/mingw-w64-crt/configure \
    --prefix=${_pkg_prefix}/${MINGW_CHOST} \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --with-sysroot=${_pkg_prefix}/${MINGW_CHOST} \
    --enable-wildcard \
    ${_crt_configure_args}
  make

  msg "Installing local copy of ${MINGW_CHOST} CRT"
  cd ${srcdir}/crt-${MINGW_CHOST}
  rm -fr ${srcdir}${_pkg_prefix}/${MINGW_CHOST}/lib
  make DESTDIR=${srcdir} install-strip

#  msg "Building ${MINGW_CHOST} libmangle"
#  [[ -d ${srcdir}/mangle-${MINGW_CHOST} ]] && rm -rf ${srcdir}/mangle-${MINGW_CHOST}
#  mkdir -p ${srcdir}/mangle-${MINGW_CHOST} && cd ${srcdir}/mangle-${MINGW_CHOST}
#  LDFLAGS+=" -L${srcdir}/${_pkg_prefix}/${MINGW_CHOST}/lib" \
#  CFLAGS+=" -I${srcdir}/${_pkg_prefix}/${MINGW_CHOST}/include" \
#  ${srcdir}/${_sourcedir}/mingw-w64-libraries/libmangle/configure \
#    --prefix=${_pkg_prefix} \
#    --build=${MINGW_CHOST} \
#    --host=${MINGW_CHOST}
#  make
}

package_headers() {
  pkgdesc="MinGW-w64 headers for Windows"
  provides=("${MINGW_PACKAGE_PREFIX}-opt-headers")
  conflicts=("${MINGW_PACKAGE_PREFIX}-opt-headers")
  options=('!strip' '!libtool' '!emptydirs')
  msg "Copying ${MINGW_CHOST} headers"
  mkdir -p ${pkgdir}${_pkg_prefix}/${MINGW_CHOST}
  cp --recursive ${srcdir}${_pkg_prefix}/${MINGW_CHOST}/include ${pkgdir}${_pkg_prefix}/${MINGW_CHOST}/

  rm ${pkgdir}${_pkg_prefix}/${MINGW_CHOST}/include/pthread_signal.h
  rm ${pkgdir}${_pkg_prefix}/${MINGW_CHOST}/include/pthread_time.h
  rm ${pkgdir}${_pkg_prefix}/${MINGW_CHOST}/include/pthread_unistd.h

  msg "Installing MinGW-w64 licenses"
  install -Dm644 ${srcdir}/${_sourcedir}/mingw-w64-headers/ddk/readme.txt ${pkgdir}${_pkg_prefix}/share/licenses/headers/ddk-readme.txt
  install -Dm644 ${srcdir}/${_sourcedir}/COPYING ${pkgdir}${_pkg_prefix}/share/licenses/headers/COPYING
  install -Dm644 ${srcdir}/${_sourcedir}/COPYING.MinGW-w64/COPYING.MinGW-w64.txt ${pkgdir}${_pkg_prefix}/share/licenses/headers/COPYING.MinGW-w64.txt
  install -Dm644 ${srcdir}/${_sourcedir}/COPYING.MinGW-w64-runtime/COPYING.MinGW-w64-runtime.txt ${pkgdir}${_pkg_prefix}/share/licenses/headers/COPYING.MinGW-w64-runtime.txt
}

package_pthread_stub_headers() {
    pkgdesc="MinGW-w64 pthread stub headers for Windows"
    provides=("${MINGW_PACKAGE_PREFIX}-opt-pthread-stub-headers")
    conflicts=("${MINGW_PACKAGE_PREFIX}-opt-pthread-stub-headers" "${MINGW_PACKAGE_PREFIX}-opt-winpthreads")
    msg "Copying ${MINGW_CHOST} pthread stub headers"

    mkdir -p ${pkgdir}${_pkg_prefix}/${MINGW_CHOST}/include

    cp ${srcdir}${_pkg_prefix}/${MINGW_CHOST}/include/pthread_signal.h ${pkgdir}${_pkg_prefix}/${MINGW_CHOST}/include/
    cp ${srcdir}${_pkg_prefix}/${MINGW_CHOST}/include/pthread_time.h   ${pkgdir}${_pkg_prefix}/${MINGW_CHOST}/include/
    cp ${srcdir}${_pkg_prefix}/${MINGW_CHOST}/include/pthread_unistd.h ${pkgdir}${_pkg_prefix}/${MINGW_CHOST}/include/
}

package_crt() {
  provides=("${MINGW_PACKAGE_PREFIX}-opt-${_basename}")
  conflicts=("${MINGW_PACKAGE_PREFIX}-opt-${_basename}")
  options=('!strip' 'staticlibs' '!buildflags' '!emptydirs')
  depends=("${MINGW_PACKAGE_PREFIX}-opt-headers-git")
  msg "Copying ${MINGW_CHOST} crt"
  mkdir -p ${pkgdir}${_pkg_prefix}/${MINGW_CHOST}
  cp --recursive ${srcdir}${_pkg_prefix}/${MINGW_CHOST}/lib ${pkgdir}${_pkg_prefix}/${MINGW_CHOST}/

  msg "Installing MinGW-w64 licenses"
  install -Dm644 ${srcdir}/${_sourcedir}/COPYING ${pkgdir}${_pkg_prefix}/share/licenses/${_realname}/COPYING
  install -Dm644 ${srcdir}/${_sourcedir}/COPYING.MinGW-w64/COPYING.MinGW-w64.txt ${pkgdir}${_pkg_prefix}/share/licenses/${_realname}/COPYING.MinGW-w64.txt
  install -Dm644 ${srcdir}/${_sourcedir}/COPYING.MinGW-w64-runtime/COPYING.MinGW-w64-runtime.txt ${pkgdir}${_pkg_prefix}/share/licenses/${_realname}/COPYING.MinGW-w64-runtime.txt
}

package_libmangle() {
  pkgdesc="MinGW-w64 libmangle"
  provides=("${MINGW_PACKAGE_PREFIX}-opt-libmangle")
  conflicts=("${MINGW_PACKAGE_PREFIX}-opt-libmangle")
  options=('strip' 'staticlibs' '!emptydirs')
  cd ${srcdir}/mangle-${MINGW_CHOST}
  make DESTDIR=${pkgdir} install
  install -Dm644 ${srcdir}/${_sourcedir}/mingw-w64-libraries/libmangle/COPYING ${pkgdir}${_pkg_prefix}/share/licenses/mingw-w64-libraries/COPYING.libmangle
}

# Wrappers for package functions

# 32-bit wrappers
package_mingw-w64-i686-opt-crt-git() {
  package_crt
}
package_mingw-w64-i686-opt-headers-git() {
  package_headers
}
package_mingw-w64-i686-opt-pthread-stub-headers-git() {
  package_pthread_stub_headers
}
package_mingw-w64-i686-opt-libmangle-git() {
  package_libmangle
}

# 64-bit wrappers
package_mingw-w64-x86_64-opt-crt-git() {
  package_crt
}
package_mingw-w64-x86_64-opt-headers-git() {
  package_headers
}
package_mingw-w64-x86_64-opt-pthread-stub-headers-git() {
  package_pthread_stub_headers
}
package_mingw-w64-x86_64-opt-libmangle-git() {
  package_libmangle
}
